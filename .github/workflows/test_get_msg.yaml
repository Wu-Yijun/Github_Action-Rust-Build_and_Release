name: Update Release Body

on:
  push:
    branches:
      - master

jobs:
  get_counter_and_release:
    runs-on: ubuntu-latest
    outputs:
      counter: ${{ steps.get_counter.outputs.counter }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      # Get the current counter value from the latest release
      - name: Get current counter
        id: get_counter
        run: |
          counter=$(curl -sL https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name' | cut -d '.' -f 3)
          echo "::set-output name=counter::$((counter + 1))"
      # Release to github release
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          # tag_name: "v1.3.${{ steps.get_counter.outputs.counter }}"
          tag_name: "v1.3.${{ steps.get_counter.outputs.counter }}.${{ github.run_number }}"
          release_name: Release 1.3.${{ steps.get_counter.outputs.counter }}.${{ github.run_number }}
          body: |
            This is release 1.3.${{ steps.get_counter.outputs.counter }}.${{ github.run_number }}.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  update-release-body:
    needs: get_counter_and_release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Commit Message
        id: get_commit_message
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "::set-output name=commit_message::$COMMIT_MESSAGE"

      - name: Update Release Body
        run: |
          RELEASE_URL=${{ needs.get_counter_and_release.outputs.upload_url }}
          NEW_BODY="Your new release body content here"
          curl -L \
            -X PATCH \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            $RELEASE_URL \
            -d "{\"body\": \"$NEW_BODY\"}"
    #   - name: Update Release Body
    #     run: |
    #       RELEASE_URL=${{ needs.get_counter_and_release.outputs.upload_url }}
    #       COMMIT_MESSAGE="${{ steps.get_commit_message.outputs.commit_message }}"
    #       curl -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
    #         -H "Accept: application/vnd.github.v3+json" \
    #         $RELEASE_URL \
    #         -d "{\"body\": \"$COMMIT_MESSAGE\"}"
