name: Update Release Body

on:
  push:
    branches:
      - master

jobs:
  # get_counter_and_release:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     release_id: ${{ steps.get_release_id.outputs.release_id }}
  #     # release_url: ${{ steps.get_release_id.outputs.release_url }}
  #     release_tag: ${{ steps.get_release_id.outputs.release_tag }}
  #   steps:
  #     - name: Get Latest Release ID
  #       id: get_release_id
  #       run: |
  #         RELEASE_INFO=$(curl -sS -X GET \
  #           -H "Accept: application/vnd.github.v3+json" \
  #           -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
  #           https://api.github.com/repos/${{ github.repository }}/releases/latest)
  #         RELEASE_ID=$(echo "$RELEASE_INFO" | jq -r '.id')
  #         RELEASE_TAG=$(echo "$RELEASE_INFO" | jq -r '.tag_name')
  #         RELEASE_URL="https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID"
  #         echo "::set-output name=release_id::$RELEASE_ID"
  #         echo "::set-output name=release_url::$RELEASE_URL"
  #         echo "::set-output name=release_tag::$RELEASE_TAG"
  
  update-release-body:
    # needs: get_counter_and_release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Commit Message
        id: get_commit_message
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "::set-output name=commit_message::$COMMIT_MESSAGE"
      
      - name: Setup Node.js
        uses: actions/setup-node@v2
      - name: Update Release Body
        run: |
          npm install @octokit/core
          release_info="${{ steps.get_commit_message.outputs.commit_message }}"
          node ./.github/workflows/update-latest-release-notes.js $release_info
