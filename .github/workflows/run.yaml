# 手动运行
on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Name of the person to greet'
        required: true
        default: 'Mona the Octocat'
# on:
#   push:
#     branches:
#       - master

name: Test Release

jobs:
  get_counter_and_release:
    runs-on: ubuntu-latest
    outputs:
      counter: ${{ steps.get_counter.outputs.counter }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Get the current counter value from the latest release
      - name: Get current counter
        id: get_counter
        run: |
          counter=$(curl -sL https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name' | cut -d '.' -f 3)
          echo "::set-output name=counter::$((counter + 1))"
      
      # Release to github release
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "v1.3.${{ steps.get_counter.outputs.counter }}"
          release_name: Release 1.3.${{ steps.get_counter.outputs.counter }}
          body: |
            This is release 1.3.${{ steps.get_counter.outputs.counter }}.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_on_ubunutu:
    needs: get_counter_and_release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # Build the project
    - name: Build Project
      run: cargo build --verbose --release

    # List the files in the target/release directory
    - name: List Files
      run: ls -R ./target/release

    # copy and compress the binary and library into a zip file
    - name: Copy and Compress Binary
      run: |
        cd ./target/release
        mkdir -p hello_windows/libs
        cp hello-world.exe hello_windows/
        cp *.dll hello_windows/libs/
        Compress-Archive -Path "hello_windows" hello-windows.zip
        Remove-Item -Path "hello_windows" -Recurse -Force
        cd ..
        cd ..

    # then upload the zip to the release
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.get_counter_and_release.outputs.upload_url }}
        asset_path: ./target/release/hello-windows.zip
        asset_name: hello-windows.zip
        asset_content_type: application/zip
  
  build_on_windows:
    needs: get_counter_and_release
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    # Build the project
    - name: Build Project
      run: cargo build --verbose --release
      
    # copy and compress the binary and library into a zip file
    - name: Copy and Compress Binary
      run: |
        cd ./target/release
        mkdir -p temp_files/libs
        cp hello-world.exe temp_files/
        cp *.lib temp_files/libs/
        cd temp_files
        zip -r ../hello-ubuntu.zip .
        cd ..
        rm -rf temp_files
        cd ..
        cd ..


    # then upload the zip to the release
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.get_counter_and_release.outputs.upload_url }}
        asset_path: ./target/release/hello-ubuntu.zip
        asset_name: hello-ubuntu.zip
        asset_content_type: application/zip